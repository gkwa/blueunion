terragrunt:
  curl:
    script: |
      url=https://github.com/gruntwork-io/terragrunt/releases/latest/download/terragrunt_linux_amd64
      checksums_url=https://github.com/gruntwork-io/terragrunt/releases/latest/download/SHA256SUMS

      tmp=$(mktemp -d ./terragrunt-XXXX)
      orig="$(pwd)"

      cd $tmp
      curl --fail --silent --show-error --location --output terragrunt_linux_amd64 $url
      curl --fail --silent --show-error --location --output SHA256SUMS $checksums_url

      if ! sha256sum --check SHA256SUMS --ignore-missing; then
          echo "Checksum validation failed"
          exit 1
      fi

      chmod +x terragrunt_linux_amd64

      install --mode 0755 --group root --owner root terragrunt_linux_amd64 /usr/local/bin/terragrunt

      cd $orig
      rm -rf $tmp

      terragrunt --version >/dev/null

helm:
  curl:
    script: |
      #!/bin/bash

      ARCH=linux-amd64

      version=$(curl -s https://api.github.com/repos/helm/helm/releases/latest | jq -r .tag_name)

      curl https://raw.githubusercontent.com/helm/helm/main/KEYS | gpg --import
      curl -sSLO https://github.com/helm/helm/releases/download/${version}/helm-${version}-${ARCH}.tar.gz.asc
      curl -sSLO https://get.helm.sh/helm-${version}-${ARCH}.tar.gz

      gpg --verify helm-${version}-${ARCH}.tar.gz.asc helm-${version}-${ARCH}.tar.gz

      if [ $? -ne 0 ]; then
          echo "Signature verification failed. The release archive may be corrupted or tampered with."
          exit 1
      fi

      echo "Signature verification succeeded. The release archive is authentic."

      base=helm-${version}-${ARCH}
      targz=$base.tar.gz
      mkdir -p /tmp/$base
      tar xzf /tmp/$targz --strip-components=1 -C /tmp/$base
      install --mode 755 /tmp/$base/helm /usr/local/bin/helm
      helm version
      helm repo add stable https://charts.helm.sh/stable
      helm search repo stable
      rm -rf /tmp/$base
      rm -rf /tmp/$targz

awscli:
  curl:
    notes: |
      This installs awscli v2 gleaned from https://docs.aws.amazon.com/cli/latest/userguide/getting-started-install.html
    
    script: |
      orig_dir=$(pwd)
      tmp=$(mktemp -d awscli-XXXX)
      cd $tmp
      curl https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip -o awscliv2.zip
      unzip awscliv2.zip
      sudo ./aws/install
      cd $orig_dir

      aws --version

      rm -rf $tmp

  apt-get:
    notes: |
      This installs aws cli v1 and I don't see deb package for v2.

      Use curl install instead.

    script: |
      sudo apt-get update
      sudo apt-get --assume-yes upgrade

      if command -v apt-get &>/dev/null; then
          for i in {1..5}; do
              DEBIAN_FRONTEND=noninteractive apt-get -y install awscli && break
              sleep 1
          done

          dpkg -s awscli &>/dev/null
      elif command -v yum &>/dev/null; then
          for i in {1..5}; do
              yum -y install awscli && break
              sleep 1
          done
      else
          echo "Neither apt nor yum package manager is available."
      fi

terragrunt:
  brew:
    script: |
      sudo --user linuxbrew --login brew install terragrunt
  curl:
    script: |
      url=https://github.com/gruntwork-io/terragrunt/releases/latest/download/terragrunt_linux_amd64
      checksums_url=https://github.com/gruntwork-io/terragrunt/releases/latest/download/SHA256SUMS

      tmp=$(mktemp -d ./terragrunt-XXXX)
      orig="$(pwd)"

      cd $tmp
      curl --fail --silent --show-error --location --output terragrunt_linux_amd64 $url
      curl --fail --silent --show-error --location --output SHA256SUMS $checksums_url

      if ! sha256sum --check SHA256SUMS --ignore-missing; then
        echo "Checksum validation failed"
        exit 1
      fi

      chmod +x terragrunt_linux_amd64

      install --mode 0755 --group root --owner root terragrunt_linux_amd64 /usr/local/bin/terragrunt

      cd $orig
      rm -rf $tmp

      terragrunt --version >/dev/null

  curl:
    notes: |
      https://docs.aws.amazon.com/cli/latest/userguide/getting-started-install.html
    script: |
      curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
      unzip awscliv2.zip
      sudo ./aws/install

kcl:
  curl:
    script: |
      curl -fsSL https://kcl-lang.io/script/install-cli.sh | /bin/bash
  homebrew:
    script: |
      brew install kcl-lang/tap/kcl@0.8.0
  scoop:
    script: |
      scoop bucket add kcl-lang https://github.com/kcl-lang/scoop-bucket.git
      scoop install kcl-lang/kcl
  go:
    install: |2

      go install kcl-lang.io/cli/cmd/kcl@latest
  docker:
    script: |+
      docker run --rm -it kcllang/kcl

  powershell:
    script: |+
      powershell -Command "iwr -useb https://kcl-lang.io/script/install-cli.ps1 | iex"

kcl-lsp:
  curl:
    script: |
      curl -fsSL https://kcl-lang.io/script/install-kcl-lsp.sh | /bin/bash
  powershell:
    script: |
      powershell -Command "iwr -useb https://kcl-lang.io/script/install-kcl-lsp.ps1 | iex"
  homebrew:
    script: |
      brew install kcl-lang/tap/kcl-lsp@0.7.0
  scoop:
    script: |-
      scoop bucket add kcl-lang https://github.com/kcl-lang/scoop-bucket.git
      scoop install kcl-lang/kcl-lsp
gpg:
  apt-get:
    script: |
      sudo apt-get install -y gnupg
  dnf:
    script: |
      sudo dnf install -y gnupg
  yum:
    script: |
      sudo yum install -y gnupg
  pacman:
    script: |
      sudo pacman -Sy --noconfirm gnupg
  zypper:
    script: |
      sudo zypper install -y gnupg
  homebrew:
    script: |
      brew install gnupg
  pkg:
    freebsd:
      script: |
        sudo pkg install -y gnupg
    openbsd:
      script: |
        sudo pkg_add gnupg
